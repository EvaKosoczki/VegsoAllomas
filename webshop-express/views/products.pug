extends layout

block content
  h1.page-title= title

  .container-fluid
      
    .row
      .col-xs-12.col-sm-2.col-md-3.col-lg-3
        .col-12.sticky-top.sidenav
          form(method='GET' action='/products' role='form')
            h4.filter-heading.mb-3.mt-3.font-weight-bold Products per page
            -let num = ['4','8','12'];
            div.customized-select(style='width: 200px')
              select(name='prodsPerPage' style='width: 100px')
                each perPage in num
                  if limit==perPage
                    option(value=perPage selected) #{perPage}
                  else 
                    option(value=perPage) #{perPage}

            input(type="hidden", name="filter", value="1")
            input(type="hidden", name="page", value="0")
            .form-group.form-check
            
            h4.filter-heading.mb-3.mt-3.font-weight-bold Brands
              - let index = 0;
              
            .row
              each brand in brands
                -let name = `brand${index}`
                -let checked = keys.indexOf(`${name}`) > -1 ? true : false
                  .col-4
                    input.form-check-input(id=`${brand.name}` type="checkbox" name=`${name}` value=`${++index}` checked=checked )
                    label.form-check-label.pr-5(for=`${brand.name}`) #{brand.name}

            h4.filter-heading.mb-3.mt-3.font-weight-bold Shape
              -let shapeIndex = 0;
            .row
              each shape in shapes
                -let shapeName = `shape${shapeIndex++}`
                -let shapeChecked = keys.indexOf(`${shapeName}`) > -1 ? true : false
                  .col-4
                    input.form-check-input(id=`${shape.shape}` type="checkbox" name=`${shapeName}` value=`${shape.shape}` checked=shapeChecked )
                    label.form-check-label.pr-5(for=`${shape.shape}`) #{shape.shape}

            h4.filter-heading.mb-3.mt-3.font-weight-bold Purpose
              -let purposeIndex = 0;
            .row
              each purpose in purposes
                -let purposeName = `purpose${purposeIndex++}`
                -let purposeChecked = keys.indexOf(`${purposeName}`) > -1 ? true : false
                  .col-4
                    input.form-check-input(id=`${purpose.purpose}` type="checkbox" name=`${purposeName}` value=`${purpose.purpose}` checked=purposeChecked )
                    label.form-check-label.pr-5(for=`${purpose.purpose}`) #{purpose.purpose}


            button.btn.btn-primary.mt-3(type='submit') Filter
    

      .col-xs-12.col-sm-10.col-md-9.col-lg-9

        .row
          each product in products
            .col-xs-12.col-sm-6.col-md-4.col-lg-3
              .card
                img.card-img-top(src=`./image/snowboards/${product.picture}` alt='...')
                .card-body
                  h5.card-title #{product.name}
                  p.card-text $ #{product.price}
                  a.btn.btn-primary(href=`/products/${product.postfix}`) Show

    .row
      .col-lg-2.offset-5
        nav(aria-label='Page navigation example')
          ul.pagination.justify-content-center
            if pagination.prev==-1
              li.page-item.disabled
                a.page-link(href=`/products?page=${pagination.prev}` aria-label='Previous')
                  span(aria-hidden='true') &laquo;
            else
              li.page-item
                - let link = query.replace(/page\=[^\&]/, `page=${pagination.prev}`) || `page=${pagination.prev}`;
                a.page-link(href=`/products?${link}` aria-label='Previous')
                  span(aria-hidden='true') &laquo;                  
            each pag in pagination.pages
              if page==pag.page
                li.page-item.active
                  a.page-link(href=`/products?page=${pag.page}` aria-label='Previous')
                    span(aria-hidden='true')= (pag.page+1)
              else
               li.page-item
                - let link = query.replace(/page\=[^\&]/, `page=${pag.page}`) || `page=${pag.page}`;
                a.page-link(href=`/products?${link}` aria-label='Previous')
                  span(aria-hidden='true')= (pag.page+1)
            if pagination.next == pagination.last
              li.page-item.disabled
                a.page-link(href=`/products?page=${pagination.next}` aria-label='Next')
                  span(aria-hidden='true') &raquo;
            else 
              li.page-item
              - let link = query.replace(/page\=[^\&]/, `page=${pagination.next}`) || `page=${pagination.next}`;
                a.page-link(href=`/products?${link}` aria-label='Next')
                  span(aria-hidden='true') &raquo;
            
            